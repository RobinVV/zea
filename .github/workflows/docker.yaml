name: Docker Images

on:
  push:
    branches:
      - 'docker/**'
    tags:
      - '*'

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: zeahub

jobs:
  tag:
    uses: ./.github/workflows/set-tag.yaml

  build-production-images:
    needs: [tag]
    runs-on: self-hosted
    strategy:
      max-parallel: 1
      matrix:
        backend: [all, jax, torch, tensorflow, numpy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push CPU Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.backend }}-cpu:${{ needs.tag.outputs.docker_tag }}
          build-args: |
            INSTALL_JAX=${{ contains('all,jax', matrix.backend) && 'cpu' || 'false' }}
            INSTALL_TORCH=${{ contains('all,torch', matrix.backend) && 'cpu' || 'false' }}
            INSTALL_TF=${{ contains('all,tensorflow', matrix.backend) && 'cpu' || 'false' }}
          cache-from: type=registry,ref=${{ env.IMAGE_PREFIX }}/cache
          cache-to: type=registry,ref=${{ env.IMAGE_PREFIX }}/cache,mode=max

      - name: Build and push GPU Docker image
        if: ${{ matrix.backend != 'numpy' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.backend }}:${{ needs.tag.outputs.docker_tag }}
          build-args: |
            INSTALL_JAX=${{ (matrix.backend == 'all' || matrix.backend == 'jax') && 'gpu' || 'false' }}
            INSTALL_TORCH=${{ (matrix.backend == 'all' || matrix.backend == 'torch') && 'gpu' || 'false' }}
            INSTALL_TF=${{ (matrix.backend == 'all' || matrix.backend == 'tensorflow') && 'gpu' || 'false' }}
          cache-from: type=registry,ref=${{ env.IMAGE_PREFIX }}/cache
          cache-to: type=registry,ref=${{ env.IMAGE_PREFIX }}/cache,mode=max
