name: Tests

on:
  pull_request:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: zeahub

jobs:
  tag:
    uses: ./.github/workflows/set-tag.yaml

  image:
    needs: [tag]
    uses: ./.github/workflows/build-image.yaml
    with:
      docker_tag: ${{ needs.tag.outputs.docker_tag }}
    secrets: inherit

  tests:
    needs: [image, tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: git config --global safe.directory $GITHUB_WORKSPACE

      - name: Pull full Docker image
        run: |
          if [ -z "${{ needs.tag.outputs.docker_tag }}" ]; then
            echo "Image tag not set!" && exit 1
          fi
          # Pull CI image that was built in build-image.yaml
          docker pull ${{ env.IMAGE_PREFIX }}/all-cpu:${{ needs.tag.outputs.docker_tag }}

      - name: Run Pytest in container
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/zea" \
            -w /zea \
            -u $(id -u):$(id -g) \
            -e HOME=/tmp \
            -e USER=$(id -un) \
            -e LOGNAME=$(id -un) \
            ${{ env.IMAGE_PREFIX }}/all-cpu:${{ needs.tag.outputs.docker_tag }} \
            sh -c "pip install -e . && pytest --cov --cov-branch --cov-report=xml -p no:cacheprovider -m 'not heavy and not notebook' ./tests"

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: tue-bmd/zea

      - name: Run heavy Pytest (allowed to fail)
        continue-on-error: true
        run: |
          docker run --rm \
          -v "${{ github.workspace }}:/zea" \
          -w /zea \
          -u $(id -u):$(id -g) \
          -e HOME=/tmp \
          -e USER=$(id -un) \
          -e LOGNAME=$(id -un) \
          ${{ env.IMAGE_PREFIX }}/all-cpu:${{ needs.tag.outputs.docker_tag }} \
          sh -c "pip install -e . && pytest -p no:cacheprovider -m 'heavy' ./tests"

  heavy-tests:
    needs: [image, tag]
    runs-on: self-hosted
    timeout-minutes: 100
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: git config --global safe.directory $GITHUB_WORKSPACE

      - name: Pull full Docker image
        run: |
          if [ -z "${{ needs.tag.outputs.docker_tag }}" ]; then
            echo "Image tag not set!" && exit 1
          fi
          docker pull ${{ env.IMAGE_PREFIX }}/all-cpu:${{ needs.tag.outputs.docker_tag }}

      - name: Run heavy Pytest
        run: |
          docker run --rm \
          -v "${{ github.workspace }}:/zea" \
          -w /zea \
          -u $(id -u):$(id -g) \
          -e HOME=/tmp \
          -e USER=$(id -un) \
          -e LOGNAME=$(id -un) \
          ${{ env.IMAGE_PREFIX }}/all-cpu:${{ needs.tag.outputs.docker_tag }} \
          sh -c "pip install -e . && pytest -p no:cacheprovider -m 'heavy' ./tests"

      - name: Run notebook tests with Pytest
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/zea" \
            -w /zea \
            -u $(id -u):$(id -g) \
            -e HOME=/tmp \
            -e USER=$(id -un) \
            -e LOGNAME=$(id -un) \
            ${{ env.IMAGE_PREFIX }}/all-cpu:${{ needs.tag.outputs.docker_tag }} \
            sh -c "pip install -e .[dev] && pytest -s -m 'notebook'"

  test-docs-build:
    needs: [image, tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: git config --global safe.directory $GITHUB_WORKSPACE

      - name: Pull CI Docker image
        run: |
          if [ -z "${{ needs.tag.outputs.docker_tag }}" ]; then
            echo "Image tag not set!" && exit 1
          fi
          # Pull CI image that was built in build-image.yaml
          docker pull ${{ env.IMAGE_PREFIX }}/all-cpu:${{ needs.tag.outputs.docker_tag }}

      - name: Build documentation with Sphinx (fail on warnings)
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/zea" \
            -w /zea/docs \
            -u $(id -u):$(id -g) \
            -e HOME=/tmp \
            -e USER=$(id -un) \
            -e LOGNAME=$(id -un) \
            ${{ env.IMAGE_PREFIX }}/all-cpu:${{ needs.tag.outputs.docker_tag }} \
            sh -c "\
              sudo apt-get update && \
              sudo apt-get install -y pandoc && \
              pip install -e ..[docs] && \
              export PATH=\"/tmp/.local/bin:\$PATH\" && \
              make docs-clean && \
              make docs-build SPHINXOPTS='-W --keep-going' \
            "
